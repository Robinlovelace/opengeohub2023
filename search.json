[
  {
    "objectID": "tidy.html",
    "href": "tidy.html",
    "title": "Tidy geographic data",
    "section": "",
    "text": "These materials were created for the OpenGeoHub Summer School 2023.\nSee the parent repo and session description in the agenda for context."
  },
  {
    "objectID": "tidy.html#exercises",
    "href": "tidy.html#exercises",
    "title": "Tidy geographic data",
    "section": "3.1 Exercises",
    "text": "3.1 Exercises\n\nRe-create the country_centroids object, using world_centroids and poland and inputs, but this time using base R syntax with the [ operator.\n\n\nBonus: use the bench::mark() function to compare the performance of the base R and tidyverse implementation\nOpen question: Is this a good thing to benchmark? Why or why not?"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "OpenGeoHub Summer School 2023",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\nThe content below was rendered from README.qmd in the robinlovelace/opengeohub23 GitHub repository.\nThis repo contains code to support sessions that I will deliver for the OpenGeoHub Summer School 2023.\nAs shown in the course schedule I will deliver the following sessions:\nAbstracts for these sessions are provided below."
  },
  {
    "objectID": "index.html#tidy-geographic-data-with-sf-dplyr-ggplot2-geos-and-friends",
    "href": "index.html#tidy-geographic-data-with-sf-dplyr-ggplot2-geos-and-friends",
    "title": "OpenGeoHub Summer School 2023",
    "section": "Tidy geographic data with sf, dplyr, ggplot2, geos and friends",
    "text": "Tidy geographic data with sf, dplyr, ggplot2, geos and friends\n\nAbstract\nThis lecture will provide an introduction to working with geographic data using R in a ‘tidy’ way. It will focus on using the sf package to read, write, manipulate, and plot geographic data in combination with the tidyverse metapackage. Why use the sf package with the tidyverse? The lecture will outline some of the ideas underlying the tidyverse and how they can speed-up data analysis pipelines, while making data analysis code easier to read and write. We will see how the following lines\nlibrary(sf)\nlibrary(tidyverse)\ncan provide a foundation on which the many geographic data analysis problems can be solved. The lecture will also cover on more recently developed packages that integrate with the tidyverse to a greater and lesser extent. We will look at how the geos package, which provides a simple and high-performance interface to the GEOS library for performing geometric operations on geographic data, integrates with the tidyverse. The tidyverse is not the right tool for every data analysis task and we touch on alternatives for working with raster data, with reference to the terra package, and alternative frameworks such as data.table. Finally, we will also look at how the ‘tidy’ philosophy could be implemented in other programming languages, such as Python.\nThe focus throughout will be on practical skills and using packages effectively within the wider context of project management tools, integrated development environments (we recommend VS Code with appropriate extensions or RStudio), and version control systems."
  },
  {
    "objectID": "index.html#processing-large-openstreetmap-datasets-for-geocomputational-research",
    "href": "index.html#processing-large-openstreetmap-datasets-for-geocomputational-research",
    "title": "OpenGeoHub Summer School 2023",
    "section": "Processing large OpenStreetMap datasets for geocomputational research",
    "text": "Processing large OpenStreetMap datasets for geocomputational research\nOpenStreetMap (OSM) is a free and openly editable map of the world. Like Wikipedia and unlike government or corperation maintained datasets, OSM is created and maintained by a community of volunteers, making it the premier decentralized and fastest evolving source of geographic vector data focussed on features relevant to human activity (e.g. roads, buildings, cafes) on planet Earth. Unlike Wikipedia, every data point in OSM has a geographic location and attributes must be structured as key-value pairs. OSM is a rich source of data for geocomputational research, but the decentralized nature of the project and the sheer volume of data. ‘Planet.osm’ now has more nodes than there are people on Earth, with more than 8 billion nodes, and the rate of data creation is increasing as the community grows, to 10 million users in early 2023. The size and rapid evolution of OSM are great strengths, democratising geographic knowledge and ensuring resilience. However, these features can make it difficult to work with OSM data.\nThis lecture will provide an introduction to working with OSM and will cover the following:\n\nHow and where to download OSM data\nHow to process small amounts of OSM data using the osmdata R package\nHow to process large OSM ‘extracts’ data with the osmextract R package\nOther command line tools for working with OSM data, including the mature and widely used osmium tool, the pyrosm Python package and the osm2streets web application and Rust codebase\n\nFinally, the lecture will outline ideas for using OSM data. It will conclude with a call to action, inspiring the use of this rich resource to support policy objectives such as the fast and fair decarbonisation of the global economy as societies transition away from inefficient, polluting and costly fossil fuels."
  },
  {
    "objectID": "index.html#using-geocomputation-in-government",
    "href": "index.html#using-geocomputation-in-government",
    "title": "OpenGeoHub Summer School 2023",
    "section": "Using geocomputation in government",
    "text": "Using geocomputation in government\nTBC"
  },
  {
    "objectID": "index.html#reproducibility",
    "href": "index.html#reproducibility",
    "title": "OpenGeoHub Summer School 2023",
    "section": "Reproducibility",
    "text": "Reproducibility\nTo install the dependencies for this repo, run the following command:\n\nremotes::install_github(\"robinlovelace/opengeohub2023\")\n\nThis repo also uses the renv package to manage dependencies. We saved the dependencies with the following command:\n\ndeps = renv::dependencies()\nnames(deps)\ndeps$Package"
  },
  {
    "objectID": "osm.html",
    "href": "osm.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  }
]